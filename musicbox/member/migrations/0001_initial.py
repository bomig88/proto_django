# Generated by Django 4.2.4 on 2023-09-21 05:05

import core.fields.encrypted_char_field
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('seq', models.BigAutoField(help_text='일련번호(PK)', primary_key=True, serialize=False)),
                ('password', core.fields.encrypted_char_field.Sha256EncryptedCharField(help_text='비밀번호', max_length=300, null=True)),
                ('username', models.CharField(help_text='이름', max_length=50, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('email', models.EmailField(help_text='이메일 주소', max_length=254, unique=True)),
                ('gender', models.CharField(help_text='성별(M:남, F:여, N:미설정)', max_length=1, null=True)),
                ('birthday', models.CharField(help_text='생년월일', max_length=8, null=True)),
                ('status', models.CharField(choices=[('join', '가입'), ('leave', '탈퇴')], help_text='상태', max_length=30)),
                ('is_active', models.BooleanField(default=True, help_text='활성화 여부')),
                ('last_login_at', models.DateTimeField(blank=True, help_text='최종 로그인 일시', null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('leave_at', models.DateTimeField(blank=True, help_text='탈퇴일', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this member belongs to. A member will get all permissions granted to each of their groups.', related_name='member_set', related_query_name='member', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this member.', related_name='member_set', related_query_name='member', to='auth.permission', verbose_name='member permissions')),
            ],
            options={
                'db_table': 't_mb_member',
                'ordering': ['-seq'],
                'unique_together': {('username', 'email')},
            },
        ),
    ]
